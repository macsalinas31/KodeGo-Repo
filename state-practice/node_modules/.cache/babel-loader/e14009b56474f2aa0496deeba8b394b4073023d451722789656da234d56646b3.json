{"ast":null,"code":"var _jsxFileName = \"E:\\\\KodeGo\\\\GitHub\\\\KodeGo-Repo\\\\state-practice\\\\src\\\\Count.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Count() {\n  _s();\n  const [count, setCount] = useState(1);\n  function incrementValue() {\n    setCount(count + 1);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: incrementValue,\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Count, \"2zt0xIm16ZAkTfzs1tD1YE/ZHbE=\");\n_c = Count;\nexport default Count;\nvar _c;\n$RefreshReg$(_c, \"Count\");","map":{"version":3,"names":["useState","Count","count","setCount","incrementValue"],"sources":["E:/KodeGo/GitHub/KodeGo-Repo/state-practice/src/Count.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction Count() {\r\n    const [count, setCount] = useState(1)\r\n    function incrementValue (){\r\n        setCount(count + 1)\r\n    }\r\n\r\n  return(\r\n    <>\r\n      <span>{count}</span>\r\n      <br></br>\r\n      <button onClick = {incrementValue}>Increment</button>\r\n    </>\r\n  );\r\n}\r\nexport default Count;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAEjC,SAASC,KAAK,GAAG;EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,CAAC,CAAC;EACrC,SAASI,cAAc,GAAG;IACtBD,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACvB;EAEF,oBACE;IAAA,wBACE;MAAA,UAAOA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAQ,eACpB;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MAAQ,OAAO,EAAIE,cAAe;MAAA,UAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA,gBACpD;AAEP;AAAC,GAbQH,KAAK;AAAA,KAALA,KAAK;AAcd,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}